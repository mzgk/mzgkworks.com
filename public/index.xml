<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>mzgkworks.com</title>
    <link>http://mzgkworks.com/index.xml</link>
    <description>Recent content on mzgkworks.com</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>ja-JP</language>
    <lastBuildDate>Wed, 26 Oct 2016 16:27:37 +0900</lastBuildDate>
    <atom:link href="http://mzgkworks.com/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>Swiftの引数についてのメモ</title>
      <link>http://mzgkworks.com/post/swift-argument/</link>
      <pubDate>Wed, 26 Oct 2016 16:27:37 +0900</pubDate>
      
      <guid>http://mzgkworks.com/post/swift-argument/</guid>
      <description>

&lt;p&gt;Swiftの引数について、1.x時代から変わったりうろ覚えだった部分もあったのでメモ。&lt;/p&gt;

&lt;h2 id=&#34;環境&#34;&gt;環境&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;Swift 3.0&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;ラベル&#34;&gt;ラベル&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;argument label : 関数呼び出し用（呼び出し時に使用）

&lt;ul&gt;
&lt;li&gt;「_」をつけることで省略可&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;parameter label : 関数定義用（関数内部で使用）&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;argument-label-あり&#34;&gt;argument label : あり&lt;/h3&gt;

&lt;pre&gt;&lt;code class=&#34;language-@Swift&#34;&gt;// argument label : first, second
// parameter label : a, b
func addTwo(first a: Int, second b: Int)-&amp;gt; Int {
    return a + b
}

// 呼び出し
var value = addTwo(first: 1, second: 2)
// 結果 : 3
print(value)
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;argument-label-なし&#34;&gt;argument label : なし&lt;/h3&gt;

&lt;pre&gt;&lt;code class=&#34;language-@Swift&#34;&gt;// parameter label : a, b
func addTwo(_ a: Int, _ b: Int)-&amp;gt; Int {
    return a + b
}

// 呼び出し
var value = addTwo(1, 2)
// 結果 : 3
print(value)
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;デフォルト引数&#34;&gt;デフォルト引数&lt;/h2&gt;

&lt;p&gt;あたかじめ引数に値を設定しておくことで、呼び出し時に引数の省略が可能となる。&lt;br /&gt;
省略された場合、定義されているデフォルト値が適用される。&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-@Swift&#34;&gt;// aとbの文字列連結。セパレーターのcにデフォルト値（, ）を定義
func connectTwo(first a: String, second b: String, separator c: String = &amp;quot;, &amp;quot;)-&amp;gt; String {
    return a + c + b
}


// デフォルト引数を使う
var val = connectTwo(first: &amp;quot;A&amp;quot;, second: &amp;quot;B&amp;quot;)
// 結果 : A, B
print(val)


// デフォルト値を使わない
val = connectTwo(first: &amp;quot;A&amp;quot;, second: &amp;quot;B&amp;quot;, separator: &amp;quot;/ &amp;quot;)
// 結果 : A/ B
print(val)
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;可変引数&#34;&gt;可変引数&lt;/h2&gt;

&lt;p&gt;あらかじめ引数の数がわからない場合などに使用する。&lt;br /&gt;
定義時は、型の後ろに「&amp;hellip;」をつける。&lt;br /&gt;
呼び出し時は、複数の値を「,（カンマ）」で区切って設定する。&lt;br /&gt;
可変引数の定義は、１関数につき１つまで。&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-@Swift&#34;&gt;// 最初の引数が可変
// 引数の値をセパレーターで区切って連結する関数
func write(inWord a: String..., separator c: String = &amp;quot;, &amp;quot;)-&amp;gt; String {
    var output = &amp;quot;&amp;quot;
    for index in 0..&amp;lt;a.count {
        output += a[index] + c
    }
    return output
}

// １つの場合
var val = write(inWord: &amp;quot;ABC&amp;quot;)
// 結果 : ABC,
print(val)


// ３つの場合
val = write(inWord: &amp;quot;ABC&amp;quot;, &amp;quot;DEF&amp;quot;, &amp;quot;GHI&amp;quot;)
// 結果 : ABC, DEF, GHI,
print(val)
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;引数の値の変更&#34;&gt;引数の値の変更&lt;/h2&gt;

&lt;p&gt;引数の値は定数となるので、関数内での変更は不可。&lt;br /&gt;
ただし、インスタンスの場合は参照値が格納されているので、インスタンスの参照値は変更不可だが、中のプロパティ値の変更は可能。&lt;br /&gt;
※プロパティがvarで宣言されている場合のみ&lt;/p&gt;

&lt;h3 id=&#34;通常&#34;&gt;通常&lt;/h3&gt;

&lt;pre&gt;&lt;code class=&#34;language-@Swift&#34;&gt;// 引数aの値は変更できない
func change(_ a: String)-&amp;gt; String {
  a = &amp;quot;XYZ&amp;quot;   // ← Cannot assign to value &#39;a&#39; is a &#39;let&#39; constant
}

change(&amp;quot;ABC&amp;quot;)
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;インスタンスの場合&#34;&gt;インスタンスの場合&lt;/h3&gt;

&lt;pre&gt;&lt;code class=&#34;language-@Swift&#34;&gt;class Person {
    let name: String
    var age: Int    // ※ここがletの場合は、変更できない

    init(inName name:String, inAge age: Int) {
        self.name = name
        self.age = age
    }
}

// 引数で渡されたPerson型の引数のageプロパティを変更する関数
func update(inPerson person: Person) {
    person.age = 20
}

// Tomを10才で生成（Tom : 10）
var tom = Person(inName: &amp;quot;Tom&amp;quot;, inAge: 10)
print(&amp;quot;\(tom.name) : \(tom.age)&amp;quot;)


// 更新する関数に渡す
update(inPerson: tom)
// 結果 : Tom : 20
print(&amp;quot;\(tom.name) : \(tom.age)&amp;quot;)
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;inoutparameter&#34;&gt;InOutParameter&lt;/h2&gt;

&lt;p&gt;定義時に型の前に「inout」をつけることで、引数の値を関数内で変更し呼び出し元に連携することができる。&lt;br /&gt;
呼び出し時は、引数の前に「&amp;amp;」をつける。&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-@Swift&#34;&gt;// 引数の値を入れ替える
func swap(first a: inout String, second b: inout String) {
    let tmp = a
    a = b
    b = tmp
}

var wordA = &amp;quot;ABC&amp;quot;
var wordZ = &amp;quot;XYZ&amp;quot;

// 入れ替え前 : wordA = ABC, wordZ = XYZ
print(&amp;quot;wordA = \(wordA), wordZ = \(wordZ)&amp;quot;)

// 入れ替え（引数に&amp;amp;がつく）
swap(first: &amp;amp;wordA, second: &amp;amp;wordZ)
// 入れ替え後 : wordA = XYZ, wordZ = ABC
print(&amp;quot;wordA = \(wordA), wordZ = \(wordZ)&amp;quot;)

&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>products</title>
      <link>http://mzgkworks.com/products/products/</link>
      <pubDate>Wed, 19 Oct 2016 19:14:47 +0900</pubDate>
      
      <guid>http://mzgkworks.com/products/products/</guid>
      <description></description>
    </item>
    
    <item>
      <title>about</title>
      <link>http://mzgkworks.com/about/about/</link>
      <pubDate>Wed, 19 Oct 2016 19:12:09 +0900</pubDate>
      
      <guid>http://mzgkworks.com/about/about/</guid>
      <description></description>
    </item>
    
    <item>
      <title>MacにSass環境を構築する（Ruby gem）</title>
      <link>http://mzgkworks.com/post/ruby-gem-install-sass/</link>
      <pubDate>Tue, 04 Oct 2016 18:57:07 +0900</pubDate>
      
      <guid>http://mzgkworks.com/post/ruby-gem-install-sass/</guid>
      <description>

&lt;h2 id=&#34;環境&#34;&gt;環境&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;OS X 10.11.6 El Capitan&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;望むこと&#34;&gt;望むこと&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;scssで書いて、動的にcssにコンパイル&lt;/li&gt;
&lt;li&gt;環境周りのコストを少なく&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;選択肢は&#34;&gt;選択肢は&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;gulp : 使うほどタスクないし、プラグインや設定ファイルなどの初期学習コストが高い&lt;/li&gt;
&lt;li&gt;npm run : package.jsonが面倒&lt;/li&gt;
&lt;li&gt;Macなのでrubyがインストール済み

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;$ sudo gem install sass&lt;/code&gt; → sassコマンドか！&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;環境構築&#34;&gt;環境構築&lt;/h2&gt;

&lt;h3 id=&#34;ruby&#34;&gt;Ruby&lt;/h3&gt;

&lt;p&gt;存在確認&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-@bash&#34;&gt;$ ruby -v
ruby 2.3.1p112 (2016-04-26 revision 54768) [x86_64-darwin15]
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;gemのアップデート&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-@bash&#34;&gt;$ sudo gem update --system
...
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;sass&#34;&gt;sass&lt;/h3&gt;

&lt;p&gt;存在確認&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-@bash&#34;&gt;$ sass -v
-bash: sass: command not found
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;インストール&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-@bash&#34;&gt;$ sudo gem install sass
...
1 gem installed

$ sass -v
Sass 3.4.22 (Selective Steve)
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;コンパイル&#34;&gt;コンパイル&lt;/h2&gt;

&lt;h3 id=&#34;フォルダ構成&#34;&gt;フォルダ構成&lt;/h3&gt;

&lt;pre&gt;&lt;code&gt;.
|-- css   → ここにコンパイルされたmain.cssが生成される
`-- scss
    |-- base
    |   |-- _reset.scss   → _sanitize.scssを@import
    |   `-- lib
    |       `-- _sanitize.scss
    |-- components
    |   `-- _component.scss   → いろいろと記述
    `-- main.scss   → reset,componentのimportのみ
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;コンパイル-1&#34;&gt;コンパイル&lt;/h3&gt;

&lt;pre&gt;&lt;code class=&#34;language-@bash&#34;&gt;# scssディレクトリ以下のファイル更新を監視し、cssディレクトリへ出力
$ sass --watch --style expanded scss:css
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;オプション&#34;&gt;オプション&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;watch : ファイルの更新を監視し、更新されたらコンパイル&lt;/li&gt;
&lt;li&gt;style : 生成されるcssの形式

&lt;ul&gt;
&lt;li&gt;nested : sassの階層をインデントで残す（デフォルト）&lt;/li&gt;
&lt;li&gt;expanded : 普通のcss形式&lt;/li&gt;
&lt;li&gt;compact : セレクタとプロパティが1行形式&lt;/li&gt;
&lt;li&gt;compressed : 圧縮形式&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;※styleを途中で変更する場合は、一度生成された.cssを削除すること&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>CSS1〜CSS3までのセレクタのまとめ</title>
      <link>http://mzgkworks.com/post/css-selector-list/</link>
      <pubDate>Wed, 21 Sep 2016 18:28:09 +0900</pubDate>
      
      <guid>http://mzgkworks.com/post/css-selector-list/</guid>
      <description>

&lt;h2 id=&#34;全称-タイプ-id-クラスセレクタ&#34;&gt;全称・タイプ・ID・クラスセレクタ&lt;/h2&gt;

&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th align=&#34;left&#34;&gt;パターン&lt;/th&gt;
&lt;th align=&#34;left&#34;&gt;セレクタ名&lt;/th&gt;
&lt;th align=&#34;left&#34;&gt;適用範囲&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;

&lt;tbody&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;*&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;全称&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;すべての要素&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;E&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;タイプ&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;E要素&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;例 E, F&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;EとFの要素&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;#id_name&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;ID&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;id_nameというIDを持つすべての要素&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;例 E#id_name&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;id_nameというIDを持つE要素&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;.class_name&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;クラス&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;class_nameというクラスを持つすべての要素&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;例 E.class_name&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;class_nameというクラスを持つE要素&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;

&lt;h2 id=&#34;属性セレクタ&#34;&gt;属性セレクタ&lt;/h2&gt;

&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th align=&#34;left&#34;&gt;パターン&lt;/th&gt;
&lt;th align=&#34;left&#34;&gt;セレクタ名&lt;/th&gt;
&lt;th align=&#34;left&#34;&gt;適用範囲&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;

&lt;tbody&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;E[foo]&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;属性&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;foo属性を持つE要素&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;E[foo=&amp;ldquo;bar&amp;rdquo;]&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;foo属性がbarの値だけを持つE要素&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;E[foo~=&amp;ldquo;bar&amp;rdquo;]&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;foo属性がbarの値を持つE要素  ※class=&amp;ldquo;bar baz&amp;rdquo;など&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;E[foo^=&amp;ldquo;bar&amp;rdquo;]&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;foo属性の値がbarで始まっているE要素  ※class=&amp;ldquo;barbal&amp;rdquo;など&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;E[foo$=&amp;ldquo;bar&amp;rdquo;]&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;foo属性の値がbarで終わっているE要素  ※class=&amp;ldquo;balbar&amp;rdquo;など&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;E[foo*=&amp;ldquo;bar&amp;rdquo;]&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;foo属性の値にbarが含まれるE要素  ※class=&amp;ldquo;fobarbaz&amp;rdquo;など&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;E[foo&amp;#124;=&amp;ldquo;bar&amp;rdquo;]&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;foo属性の値が、bar または bar-bazのE要素&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;

&lt;h2 id=&#34;結合子セレクタ&#34;&gt;結合子セレクタ&lt;/h2&gt;

&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th align=&#34;left&#34;&gt;パターン&lt;/th&gt;
&lt;th align=&#34;left&#34;&gt;セレクタ名&lt;/th&gt;
&lt;th align=&#34;left&#34;&gt;適用範囲&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;

&lt;tbody&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;E F&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;子孫&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;E要素の子孫であるF要素&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;E *&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;E要素の子孫すべて&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;E .class_name&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;E要素の子孫でclass_nameというクラスを持つ要素&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;.class_name E&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;.class_nameを持つ要素の子孫であるE要素&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;E &amp;gt; F&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;子&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;E要素の子となるF要素  ※途中他要素の子になっているのは対象外&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;E + F&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;隣接&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;E要素に隣接（直後）しているF要素&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;E ~ F&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;間接&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;E要素の後ろにある同じ階層のF要素&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;例 div ~ p&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;divと同階層でdivより後ろにあるpが適用&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;例 h2 ~ h2&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;同階層で２番目のh2から適用&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;

&lt;h2 id=&#34;構造擬似クラスセレクタ&#34;&gt;構造擬似クラスセレクタ&lt;/h2&gt;

&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th align=&#34;left&#34;&gt;パターン&lt;/th&gt;
&lt;th align=&#34;left&#34;&gt;セレクタ名&lt;/th&gt;
&lt;th align=&#34;left&#34;&gt;適用範囲&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;

&lt;tbody&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;E:first-child&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;構造擬似&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;最初のE要素（= nth-child(1)） ※最初のEより前の他要素もカウント&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;E:last-child&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;最後のE要素（= nth-last-child(1)） ※最後のEより後ろの他要素もカウント&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;E:nth-child(n)&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;n番目のE要素  ※途中の他要素もカウント&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;E:nth-last-child(n)&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;最後からn番目のE要素  ※途中の他要素もカウント&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;E:nth-of-type(n)&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;最初からn番目に表れるE要素  ※途中の他要素はカウントしない&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;E:nth-last-of-type(n)&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;最後からn番目に表れるE要素  ※途中の他要素はカウントしない&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;例 (n) → 2n+1 or odd&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;奇数番目&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;例 (n) → 2n or even&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;偶数番目&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;例 (n) → 3n&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;３の倍数番目&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;例 (n) → 3n+1&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;１、４、７、１０&amp;hellip;番目&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;E:first-of-type&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;最初のE要素  ※他の要素はカウントしない&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;E:last-of-type&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;最後のE要素  ※他の要素はカウントしない&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;E F:only-child&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;E要素内にF要素１つのみ存在の場合  ※他要素・F複数はダメ&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;E F:only-of-type&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;E要素内にF要素が１つのみ存在の場合  ※他要素がいても可&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;E:empty&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;E要素内がカラの場合&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;:root&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;文書のルート要素（htmlに適用するのと同じ）&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;

&lt;h2 id=&#34;否定擬似クラスセレクタ&#34;&gt;否定擬似クラスセレクタ&lt;/h2&gt;

&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th align=&#34;left&#34;&gt;パターン&lt;/th&gt;
&lt;th align=&#34;left&#34;&gt;セレクタ名&lt;/th&gt;
&lt;th align=&#34;left&#34;&gt;適用範囲&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;

&lt;tbody&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;E:not(s)&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;否定擬似&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;sで指定するセレクタに該当しないE要素&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;例 body *:not(h1)&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;h1以外すべての要素&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;例 p:not(.class_name)&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;class_nameがついているp以外のすべてのp&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;

&lt;h2 id=&#34;リンク擬似クラスセレクタ&#34;&gt;リンク擬似クラスセレクタ&lt;/h2&gt;

&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th align=&#34;left&#34;&gt;パターン&lt;/th&gt;
&lt;th align=&#34;left&#34;&gt;セレクタ名&lt;/th&gt;
&lt;th align=&#34;left&#34;&gt;適用範囲&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;

&lt;tbody&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;E:link&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;リンク擬似&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;未訪問のリンク&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;E:visited&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;訪問済みのリンク&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;

&lt;h2 id=&#34;ユーザーアクション擬似クラスセレクタ&#34;&gt;ユーザーアクション擬似クラスセレクタ&lt;/h2&gt;

&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th align=&#34;left&#34;&gt;パターン&lt;/th&gt;
&lt;th align=&#34;left&#34;&gt;セレクタ名&lt;/th&gt;
&lt;th align=&#34;left&#34;&gt;適用範囲&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;

&lt;tbody&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;E:active&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;ユーザーアクション&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;クリック中の要素&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;E:hover&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;カーソルが乗っている要素&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;E:focus&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;フォーカスされた要素（入力欄で入力可能状態）&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;:target&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;href=&amp;ldquo;#foo&amp;rdquo;のリンクを踏んだ際の、id=&amp;ldquo;foo&amp;rdquo;の要素&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;

&lt;h2 id=&#34;ui状態擬似クラスセレクタ&#34;&gt;UI状態擬似クラスセレクタ&lt;/h2&gt;

&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th align=&#34;left&#34;&gt;パターン&lt;/th&gt;
&lt;th align=&#34;left&#34;&gt;セレクタ名&lt;/th&gt;
&lt;th align=&#34;left&#34;&gt;適用範囲&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;

&lt;tbody&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;E:enabled&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;UI状態擬似&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;E要素が有効状態（textareaなど）&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;E:disabled&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;E要素が無効状態（textareaなど）&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;E:checked&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;E要素がチェック状態（ラジオ・チェックボックス）&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;例 チェックボックス&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;input[type=&amp;ldquo;checkbox&amp;rdquo;]:checked {}&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;

&lt;h2 id=&#34;言語情報擬似クラスセレクタ&#34;&gt;言語情報擬似クラスセレクタ&lt;/h2&gt;

&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th align=&#34;left&#34;&gt;パターン&lt;/th&gt;
&lt;th align=&#34;left&#34;&gt;セレクタ名&lt;/th&gt;
&lt;th align=&#34;left&#34;&gt;適用範囲&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;

&lt;tbody&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;E:lang(s)&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;言語情報&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;lang=&amp;ldquo;s&amp;rdquo;を持つE要素&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;

&lt;h2 id=&#34;擬似要素セレクタ&#34;&gt;擬似要素セレクタ&lt;/h2&gt;

&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th align=&#34;left&#34;&gt;パターン&lt;/th&gt;
&lt;th align=&#34;left&#34;&gt;セレクタ名&lt;/th&gt;
&lt;th align=&#34;left&#34;&gt;適用範囲&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;

&lt;tbody&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;E::first-letter&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;擬似要素&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;E要素の最初の１文字&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;E::first-line&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;E要素の最初の１行&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;E::before&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;E要素の直前&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;E::after&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;E要素の直後&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;例 前に☆&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;::before {contet: &amp;ldquo;☆&amp;rdquo;}&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
</description>
    </item>
    
    <item>
      <title>CSSの適用優先度の考え方</title>
      <link>http://mzgkworks.com/post/css-applying-priority/</link>
      <pubDate>Tue, 20 Sep 2016 18:09:36 +0900</pubDate>
      
      <guid>http://mzgkworks.com/post/css-applying-priority/</guid>
      <description>

&lt;h2 id=&#34;cssが適用される優先度&#34;&gt;CSSが適用される優先度&lt;/h2&gt;

&lt;p&gt;詳細度の大きい順（点数例）に適用が優先される。&lt;/p&gt;

&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th align=&#34;left&#34;&gt;セレクタ名&lt;/th&gt;
&lt;th align=&#34;left&#34;&gt;セレクタ例&lt;/th&gt;
&lt;th align=&#34;left&#34;&gt;ページ内での複数指定&lt;/th&gt;
&lt;th align=&#34;left&#34;&gt;詳細度&lt;/th&gt;
&lt;th align=&#34;left&#34;&gt;点数例&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;

&lt;tbody&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;idセレクタ&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;#id&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;１度のみ&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;大&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;100&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;classセレクタ&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;.class&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;複数可&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;中&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;10&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;要素セレクタ&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;div, p&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;複数可&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;小&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;1&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;擬似セレクタ&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;:first-child&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;複数可&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;小&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;1&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;全称セレクタ&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;*&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;１度&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;最小&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;0&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;

&lt;h2 id=&#34;組合せなしの場合&#34;&gt;組合せなしの場合&lt;/h2&gt;

&lt;p&gt;「idセレクタ ＞ classセレクタ ＞ 要素セレクタ ＞ 全称セレクタ」の順で適用される。&lt;br /&gt;
セレクタが同じ場合（詳細度が同じなので）、あとに書かれたものが優先される。&lt;/p&gt;

&lt;h2 id=&#34;組合せ等がある場合&#34;&gt;組合せ等がある場合&lt;/h2&gt;

&lt;p&gt;組合せたセレクタ名の詳細度の合計が高い順に、適用される。&lt;br /&gt;
　classセレクタ＋要素セレクタ ＞ classセレクタ&lt;br /&gt;
※ただし、同じレベルのセレクタを重ねていっても、上位のセレクタに勝つことはない。&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-@html&#34;&gt;&amp;lt;div class=&amp;quot;box&amp;quot;&amp;gt;
  &amp;lt;p class=&amp;quot;text&amp;quot;&amp;gt;内側のテキスト&amp;lt;/p&amp;gt;
&amp;lt;/div&amp;gt;
&amp;lt;p class=&amp;quot;text&amp;quot;&amp;gt;外側のテキスト&amp;lt;/p&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code class=&#34;language-@css&#34;&gt;.text {
  color: red;
}
.box p {
  color: blue;
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;上記の場合、&lt;p&gt;には同じclassが指定されているが&lt;br /&gt;
「 .box(10) + p(1) ＞ .text(10) 」となるので、&lt;br /&gt;
&lt;br&gt;
内側のテキスト : blue&lt;br /&gt;
外側のテキスト : red&lt;br /&gt;
&lt;br&gt;
となる。&lt;/p&gt;

&lt;h2 id=&#34;要素-親要素&#34;&gt;要素 ＞ 親要素&lt;/h2&gt;

&lt;p&gt;親要素から受け継ぐ指定より、要素そのものへの指定が優先して適用される。&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-@html&#34;&gt;&amp;lt;div class=&amp;quot;box&amp;quot;&amp;gt;
  &amp;lt;p class=&amp;quot;text&amp;quot;&amp;gt;内側のテキスト&amp;lt;/p&amp;gt;
&amp;lt;/div&amp;gt;
&amp;lt;p class=&amp;quot;text&amp;quot;&amp;gt;外側のテキスト&amp;lt;/p&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code class=&#34;language-@css&#34;&gt;p {
  color: red;
}
.box {
  color: blue;
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;上記の場合、詳細度的には「.box(10) ＞ p(1)」だが、「.box」は p の親要素 div のクラスセレクタであり、p には直接指定がある。&lt;br /&gt;
なので、直接の指定 ＞ 親要素の指定 となり、&lt;br /&gt;
&lt;br&gt;
内側のテキスト : red&lt;br /&gt;
外側のテキスト : red&lt;br /&gt;
&lt;br&gt;
となる。&lt;/p&gt;

&lt;h2 id=&#34;important&#34;&gt;!important&lt;/h2&gt;

&lt;p&gt;詳細度が一番大きくなり、インラインCSSを含めすべてを上書きすることができる。&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>MacからLinux（CentOS7）にSSH公開鍵認証で接続する</title>
      <link>http://mzgkworks.com/post/mac-linux-ssh-rsa-connection/</link>
      <pubDate>Fri, 16 Sep 2016 18:32:16 +0900</pubDate>
      
      <guid>http://mzgkworks.com/post/mac-linux-ssh-rsa-connection/</guid>
      <description>

&lt;p&gt;MacからSSHの公開鍵認証でLinux（CentOS7）に接続する方法。&lt;/p&gt;

&lt;h2 id=&#34;linux-公開鍵の設置場所作成&#34;&gt;Linux : 公開鍵の設置場所作成&lt;/h2&gt;

&lt;p&gt;Linux側で公開鍵ファイルを設置する場所を作成しておく。&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-@bash&#34;&gt;# ホームディレクトリ直下に.sshディレクトリを作成
$ mkdir ~/.ssh

# パーミッションを700に変更
$ chmod 700 ~/.ssh
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;mac-公開鍵と秘密鍵の作成&#34;&gt;Mac : 公開鍵と秘密鍵の作成&lt;/h2&gt;

&lt;p&gt;Mac側で &lt;code&gt;$ ssh-keygen&lt;/code&gt;コマンドを使って、公開鍵と秘密鍵ファイルを生成する。&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-@bash&#34;&gt;# SSH2-rsa形式で作成
$ ssh-keygen -t rsa
Generating public/private rsa key pair.
Enter file in which to save the key (/Users/[ユーザー名]/.ssh/id_rsa):

# 作成したい場所とファイル名をフルパスで入力する
# 未入力の場合は、/Users/[ユーザー名]/.ssh/に以下が生成される
# id_rsa : 秘密鍵
# id_rsa.pub : 公開鍵

# 任意のパスフレーズを入力する
Enter passphrase (empty for no passphrase):
Enter same passphrase again:

# 作成が完了したか確認
$ ls -la ~/.ssh
-rw-------   1 xxxx  staff  1766  9 16 17:06 id_rsa
-rw-r--r--   1 xxxx  staff   402  9 16 17:06 id_rsa.pub

# 公開鍵ファイルのパーミッションを変更（所有者のみrw）
$ chmod 600 ~/.ssh/id_rsa.pub

&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;mac-ssh接続の設定&#34;&gt;Mac : SSH接続の設定&lt;/h2&gt;

&lt;p&gt;SSH設定ファイル（~/.ssh/Config）に接続情報を追加する。&lt;br /&gt;
ssh接続時にHOSTに設定した引数で接続ができるようになる。&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-@bash&#34;&gt;HOST 任意の名前（sshコマンドの引数として入力する）
  HostName 接続先LinuxのIP
  User Linuxログインユーザー名
  Port Linux側SSHポート番号
  IdentityFile Mac内の秘密鍵ファイルのフルパス
  ServerAliveInterval 60 # 60秒ごとに接続先にmsg送信
  # これは接続が切れないようにするため
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;公開鍵ファイルの転送&#34;&gt;公開鍵ファイルの転送&lt;/h2&gt;

&lt;p&gt;Macから接続先のLinuxに&lt;code&gt;$ scp&lt;/code&gt;コマンドを使って、公開鍵ファイルを転送する。&lt;br /&gt;
その際に、公開鍵ファイルの名前を「authorized_keys」に変更する。&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-@bash&#34;&gt;$ scp -P [SSHポート番号] [公開鍵フルパス] [ユーザー名]@[LinuxのIP]:~/.ssh/authorized_keys
xxx@xxx&#39;s password: # Linuxのユーザーパスワード
id_rsa.pub                                                                    100%  402     0.4KB/s   00:00
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;接続&#34;&gt;接続&lt;/h2&gt;

&lt;p&gt;Mac側から接続。&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-@bash&#34;&gt;$ ssh [HOSTに定義した名前]

# 秘密鍵を作成した際のパスフレーズ入力のダイアログが表示される
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;linux-sshパスワード認証を禁止する&#34;&gt;Linux : SSHパスワード認証を禁止する&lt;/h2&gt;

&lt;p&gt;SSHサーバーの設定を変更し、パスワード認証を無効にする。&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-@bash&#34;&gt;$ sudo vi /etc/ssh/sshd_config

PassswordAuthentication yes → noに変更

# SSHサービスの設定を再読み込みする
$ sudo systemctl reload sshd.service
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>Linuxでのログインユーザの確認や制御の方法</title>
      <link>http://mzgkworks.com/post/linux-login-user-management/</link>
      <pubDate>Fri, 16 Sep 2016 16:21:06 +0900</pubDate>
      
      <guid>http://mzgkworks.com/post/linux-login-user-management/</guid>
      <description>

&lt;p&gt;Linuxにはrootユーザーが必ず存在するため、外部からのログインは一般ユーザーのみに限定し、rootユーザーを禁止する。&lt;/p&gt;

&lt;h2 id=&#34;sshでのrootログインの禁止&#34;&gt;SSHでのrootログインの禁止&lt;/h2&gt;

&lt;p&gt;/etc/ssh/sshd_configファイルを以下に変更。&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-@bash&#34;&gt;PermitRootLogin no
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;ログイン可能なユーザーを限定&#34;&gt;ログイン可能なユーザーを限定&lt;/h2&gt;

&lt;p&gt;/etc/ssh/sshd_configファイルに以下を追記。&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-@bash&#34;&gt;# AllowUsers [ユーザー名]
AllowUsers centuser
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;おまけ-sshポートの変更&#34;&gt;（おまけ）SSHポートの変更&lt;/h2&gt;

&lt;p&gt;/etc/ssh/sshd_configファイルを以下に変更。&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-@bash&#34;&gt;# Port [ポート番号]
Port 10022
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;変更後はsshサーバーの再起動&#34;&gt;変更後はSSHサーバーの再起動&lt;/h2&gt;

&lt;p&gt;設定ファイルの変更後は、SSKサーバーを再起動させる。&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-@bash&#34;&gt;$ sudo systemctl restart sshd.service
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;過去のログイン情報を確認する&#34;&gt;過去のログイン情報を確認する&lt;/h2&gt;

&lt;p&gt;&lt;code&gt;$ last&lt;/code&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-@bash&#34;&gt;$ last
centuser pts/0        219.118.174.90   Fri Sep 16 15:59   still logged in
centuser pts/0        219.118.174.90   Fri Sep 16 15:54 - 15:54  (00:00)
centuser pts/1        219.118.174.90   Thu Sep 15 19:20 - 19:35  (00:15)
centuser pts/0        219.118.174.90   Thu Sep 15 16:06 - 21:01  (04:54)
centuser pts/1        219.118.174.90   Tue Sep 13 17:34 - 19:50  (02:16)
centuser pts/0        219.118.174.90   Tue Sep 13 16:57 - 19:08  (02:11)
reboot   system boot  3.10.0-327.28.3. Tue Sep 13 16:56 - 16:16 (2+23:19)
centuser pts/0        219.118.174.90   Tue Sep 13 16:48 - 16:56  (00:07)
...
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;ユーザーごとの最終ログインを確認する&#34;&gt;ユーザーごとの最終ログインを確認する&lt;/h2&gt;

&lt;p&gt;ユーザーごとの最終ログインを表示することによって、覚えのないユーザーのログインを発見できる。&lt;br /&gt;
&lt;code&gt;$ lastlog&lt;/code&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-@bash&#34;&gt;$ lastlog
ユーザ名         ポート   場所             最近のログイン
root             pts/0                     金  9月 16 15:54:17 +0900 2016
bin                                        **一度もログインしていません**
...
centuser         pts/0    219.118.174.90   金  9月 16 15:59:23 +0900 2016
apache                                     **一度もログインしていません**
mysql                                      **一度もログインしていません**
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>Linuxで開いているポートを確認する方法</title>
      <link>http://mzgkworks.com/post/linux-port-confirm/</link>
      <pubDate>Thu, 15 Sep 2016 19:08:29 +0900</pubDate>
      
      <guid>http://mzgkworks.com/post/linux-port-confirm/</guid>
      <description>

&lt;p&gt;開いているポートの確認方法。&lt;br /&gt;
&lt;br&gt;
ポートはサービス（ソフトウェア）が使用し、そのポートを通る通信をFireWallが監視（制御）している。&lt;br /&gt;
なので、サービスの登録（ソフトのインストール）をするとポートが使用され、FireWallでそのポートを開放してやると、外部との通信が可能になる。&lt;/p&gt;

&lt;h2 id=&#34;netstat-ss&#34;&gt;netstat（ss）&lt;/h2&gt;

&lt;p&gt;&lt;code&gt;$ netstat&lt;/code&gt;　または &lt;code&gt;$ ss&lt;/code&gt;コマンドで、現在開いているポートを一覧表示することができる。&lt;/p&gt;

&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th align=&#34;left&#34;&gt;オプション&lt;/th&gt;
&lt;th align=&#34;left&#34;&gt;説明&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;

&lt;tbody&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;-l&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Listenしているポートのみ表示&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;-t&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;TCPを表示&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;-u&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;UDPを表示&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;-n&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;ポートやホストを数値で表示&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;-p&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;ポートを開いているプロセスを表示（sudo）&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;-4&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;IPv4のみ&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;-6&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;IPv6のみ&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;

&lt;pre&gt;&lt;code class=&#34;language-@bash&#34;&gt;# 開いているポートと使用しているプロセス（IPv4）
$ sudo netstat -ltup4
sudo netstat -ltup4
Active Internet connections (only servers)
Proto Recv-Q Send-Q Local Address           Foreign Address         State       PID/Program name
tcp        0      0 0.0.0.0:mysql           0.0.0.0:*               LISTEN      2015/mysqld
tcp        0      0 localhost:smtp          0.0.0.0:*               LISTEN      2282/master
tcp        0      0 0.0.0.0:10022           0.0.0.0:*               LISTEN      1274/sshd
udp        0      0 localhost:323           0.0.0.0:*                           658/chronyd

# 上記を数値で
sudo netstat -ltunp4
Active Internet connections (only servers)
Proto Recv-Q Send-Q Local Address           Foreign Address         State       PID/Program name
tcp        0      0 0.0.0.0:3306            0.0.0.0:*               LISTEN      2015/mysqld
tcp        0      0 127.0.0.1:25            0.0.0.0:*               LISTEN      2282/master
tcp        0      0 0.0.0.0:10022           0.0.0.0:*               LISTEN      1274/sshd
udp        0      0 127.0.0.1:323           0.0.0.0:*                           658/chronyd
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;例えば&#34;&gt;例えば&lt;/h2&gt;

&lt;p&gt;例えばhttps通信を許可してやるには、&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;mod_sslをインストール

&lt;ul&gt;
&lt;li&gt;$ sudo yum install mod_ssl&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;SSLの設定

&lt;ul&gt;
&lt;li&gt;/etc/httpd/conf.d/sl.conf&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;Apaceを再起動する

&lt;ul&gt;
&lt;li&gt;$ sudo systemctl restart httpd&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;ポート状態を確認する

&lt;ul&gt;
&lt;li&gt;$ sudo netstat -ltupn&lt;/li&gt;
&lt;li&gt;443がLISTEN状態になっているか？&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;FireWallにサービスの許可を追加

&lt;ul&gt;
&lt;li&gt;$ sudo firewall-cmd &amp;ndash;add-service=https&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;関連&#34;&gt;関連&lt;/h2&gt;

&lt;p&gt;&lt;a href=&#34;http://mzgkworks.com/post/network-protocol-ipadress/&#34;&gt;ネットワークの基礎知識（プロトコル・IPアドレス・サブネットマスク・ポート）&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>CentOS7のsystemctlコマンドの使い方</title>
      <link>http://mzgkworks.com/post/centos7-systemctl-service/</link>
      <pubDate>Thu, 15 Sep 2016 18:57:14 +0900</pubDate>
      
      <guid>http://mzgkworks.com/post/centos7-systemctl-service/</guid>
      <description>

&lt;p&gt;CentOS 7のsystemdサービス管理のメモ。&lt;br /&gt;
サービスの稼働状態や自動起動設定の確認・操作。　　&lt;/p&gt;

&lt;h2 id=&#34;unitの状態&#34;&gt;UNITの状態&lt;/h2&gt;

&lt;h3 id=&#34;確認-一覧&#34;&gt;確認 : 一覧&lt;/h3&gt;

&lt;p&gt;&lt;code&gt;$ systemctl list-unit&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;ACTIVE, SUBが実行状態を表している。&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-@bash&#34;&gt;# UNITのタイプがServiceのみを確認
$ systemctl list-units -t service
UNIT                 LOAD   ACTIVE SUB     DESCRIPTION
auditd.service       loaded active running Security Auditing Service
chronyd.service      loaded active running NTP client/server
...
● kdump.service      loaded failed failed  Crash recovery kernel arming
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;確認-個別&#34;&gt;確認 : 個別&lt;/h3&gt;

&lt;p&gt;&lt;code&gt;$ systemctl is-active [UNIT名]&lt;/code&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-@bash&#34;&gt;$ systemctl is-active yum-cron
active
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;確認-個別詳細&#34;&gt;確認 : 個別詳細&lt;/h3&gt;

&lt;p&gt;&lt;code&gt;$ systemctl status [UNIT名]&lt;/code&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-@bash&#34;&gt;$ systemctl status yum-cron
● yum-cron.service - Run automatic yum updates as a cron job
   Loaded: loaded (/usr/lib/systemd/system/yum-cron.service; enabled; vendor preset: disabled)
   Active: active (exited) since 火 2016-09-13 16:56:49 JST; 2 days ago
  Process: 644 ExecStart=/bin/touch /var/lock/subsys/yum-cron (code=exited, status=0/SUCCESS)
 Main PID: 644 (code=exited, status=0/SUCCESS)
   CGroup: /system.slice/yum-cron.service
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;操作-起動-停止-再起動-強制終了&#34;&gt;操作（起動・停止・再起動・強制終了）&lt;/h3&gt;

&lt;p&gt;UNITの操作。&lt;br /&gt;
&lt;code&gt;$ sudo systemctl [UNITコマンド] [UNIT名]&lt;/code&gt;&lt;/p&gt;

&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th align=&#34;left&#34;&gt;UNITコマンド&lt;/th&gt;
&lt;th align=&#34;left&#34;&gt;説明&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;

&lt;tbody&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;start&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;起動させる&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;stop&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;停止させる&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;restart&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;再起動させる&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;kill&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;強制終了させる&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;

&lt;h2 id=&#34;自動起動設定&#34;&gt;自動起動設定&lt;/h2&gt;

&lt;h3 id=&#34;確認-一覧-1&#34;&gt;確認 : 一覧&lt;/h3&gt;

&lt;p&gt;&lt;code&gt;$ systemctl list-unit-files&lt;/code&gt;&lt;/p&gt;

&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th align=&#34;left&#34;&gt;STATE&lt;/th&gt;
&lt;th align=&#34;left&#34;&gt;説明&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;

&lt;tbody&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;enabled&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;自動起動 : 有効&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;disabled&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;自動起動 : 無効&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;static&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;自動起動 : 設定不可&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;

&lt;pre&gt;&lt;code class=&#34;language-@bash&#34;&gt;# UNITのタイプがServiceのみを確認
$ systemctl list-unit-files -t service
UNIT FILE                                   STATE
arp-ethers.service                          disabled
auditd.service                              enabled
chrony-dnssrv@.service                      static
dbus-org.freedesktop.hostname1.service      static
...

# grepへパイプで繋いで「enabled」のみを表示させる
$ systemctl list-unit-files -t service | grep enabled
UNIT FILE                                   STATE
auditd.service                              enabled
chronyd.service                             enabled
...
tuned.service                               enabled
yum-cron.service                            enabled
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;確認-個別-1&#34;&gt;確認 : 個別&lt;/h3&gt;

&lt;p&gt;&lt;code&gt;$ sudo systemctl is-enabled [Unit名]&lt;/code&gt;&lt;/p&gt;

&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th align=&#34;left&#34;&gt;状態&lt;/th&gt;
&lt;th align=&#34;left&#34;&gt;説明&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;

&lt;tbody&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;enabled&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;自動起動が有効&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;disabled&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;自動起動が無効&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;

&lt;pre&gt;&lt;code class=&#34;language-@bash&#34;&gt;# yum-cronの状態確認
$ sudo systemctl is-active yum-cron
enabled
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;操作-有効化-無効化&#34;&gt;操作（有効化・無効化）&lt;/h3&gt;

&lt;p&gt;&lt;code&gt;$ sudo systemctl [UNITコマンド] [UNIT名]&lt;/code&gt;&lt;/p&gt;

&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th align=&#34;left&#34;&gt;UNITコマンド&lt;/th&gt;
&lt;th align=&#34;left&#34;&gt;説明&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;

&lt;tbody&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;enable&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;自動起動 : 有効化&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;disable&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;自動起動 : 無効化&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
</description>
    </item>
    
    <item>
      <title>SELinuxの基礎知識と確認・設定方法</title>
      <link>http://mzgkworks.com/post/linux-selinux/</link>
      <pubDate>Tue, 13 Sep 2016 17:57:08 +0900</pubDate>
      
      <guid>http://mzgkworks.com/post/linux-selinux/</guid>
      <description>

&lt;h2 id=&#34;selinux&#34;&gt;SELinux&lt;/h2&gt;

&lt;p&gt;Security-Enhanced Linuxの略。&lt;br /&gt;
米NSA（National Security Agency＝米国国家安全保障局）が中心となって、不正侵入の被害を極力少なくすることを目的に開発。&lt;br /&gt;
オープンソースとして提供されており、主要なLinuxディストリビューションに組み込まれている。&lt;br /&gt;
基本的にはすべてのアクセスを拒否し、ポリシー（アクセス制御設定）でアクセスコントロールを行う仕組み。&lt;br /&gt;
root権限も無効化する。&lt;/p&gt;

&lt;h2 id=&#34;permissiveモード&#34;&gt;Permissiveモード&lt;/h2&gt;

&lt;p&gt;デフォルトのポリシーで通常は動作するが、インストールしたソフトウェアやWebコンテンツなどがうまく動作しない場合がある。&lt;br /&gt;
その際の問題切り分け（SELinuxのせいなのか、他に原因があるか）に、一時的にSELinuxをPermissiveモードにして確認を行ったりする。&lt;/p&gt;

&lt;h2 id=&#34;状態の確認&#34;&gt;状態の確認&lt;/h2&gt;

&lt;h3 id=&#34;getenforce&#34;&gt;$ getenforce&lt;/h3&gt;

&lt;p&gt;現在の状態を表示する。&lt;/p&gt;

&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th align=&#34;left&#34;&gt;状態&lt;/th&gt;
&lt;th align=&#34;left&#34;&gt;説明&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;

&lt;tbody&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;Enforcing&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;有効化されており、ポリシーに違反するアクセスを拒否する&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;Permissive&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;有効化されているが、ポリシー違反はログに出力するのみ&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;Disable&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;無効化されている&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;

&lt;pre&gt;&lt;code class=&#34;language-@bash&#34;&gt;$ getenforce
Permissive
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;etc-sysconfig-selinux&#34;&gt;/etc/sysconfig/selinux&lt;/h3&gt;

&lt;p&gt;システム起動時の設定が書かれている。&lt;br /&gt;
&lt;strong&gt;システム再起動後も設定を反映させる場合は、このファイルの定義を変更すること。&lt;/strong&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-@bash&#34;&gt;$ sudo vi /etc/sysconfig/selinux

# This file controls the state of SELinux on the system.
# SELINUX= can take one of these three values:
#     enforcing - SELinux security policy is enforced.
#     permissive - SELinux prints warnings instead of enforcing.
#     disabled - No SELinux policy is loaded.
SELINUX=permissive
...
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;設定変更-一時的&#34;&gt;設定変更（一時的）&lt;/h2&gt;

&lt;p&gt;一時的な変更は &lt;code&gt;$ setenforce&lt;/code&gt;コマンドを使用する。&lt;br /&gt;
※Disableにする場合は、/etc/sysconfig/selinuxファイルの値を変更する。&lt;/p&gt;

&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th align=&#34;left&#34;&gt;引数&lt;/th&gt;
&lt;th align=&#34;left&#34;&gt;説明&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;

&lt;tbody&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;0&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Permissiveへ&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;1&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Enforcingへ&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;

&lt;pre&gt;&lt;code class=&#34;language-@bash&#34;&gt;# Permissiveに変更
$ sudo setenforce 0

# Enforcingに変更
$ sudo setenforce 1
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;設定変更-恒久的&#34;&gt;設定変更（恒久的）&lt;/h2&gt;

&lt;p&gt;/etc/sysconfig/selinuxファイルの定義を変更する。&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-@bash&#34;&gt;# 変更する
$ sudo vi /etc/sysconfig/selinux

# This file controls the state of SELinux on the system.
# SELINUX= can take one of these three values:
#     enforcing - SELinux security policy is enforced.
#     permissive - SELinux prints warnings instead of enforcing.
#     disabled - No SELinux policy is loaded.
SELINUX=permissive
...


# Linuxを再起動する
$ shutdown -r now
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>Macでシンボリックリンクを活用する : ln -s</title>
      <link>http://mzgkworks.com/post/mac-symbolic-link/</link>
      <pubDate>Mon, 12 Sep 2016 19:00:43 +0900</pubDate>
      
      <guid>http://mzgkworks.com/post/mac-symbolic-link/</guid>
      <description>

&lt;p&gt;Macで使えるシンボリックリンクの操作メモ。&lt;br /&gt;
ディレクトリやファイルを別の場所で管理したいが、ディレクトリ構成上の制約がある時とかに便利。&lt;/p&gt;

&lt;h2 id=&#34;シンボリックリンク&#34;&gt;シンボリックリンク&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;元ファイル・ディレクトリと同様の操作ができる&lt;/li&gt;
&lt;li&gt;エイリアスを違って &lt;code&gt;$ cd&lt;/code&gt; も可能&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;作成&#34;&gt;作成&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;絶対パス&lt;/strong&gt; が重要。&lt;br /&gt;
&lt;code&gt;$ ln -s 元ファイル・ディレクトリの絶対パス リンク作成先のパス&lt;/code&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-@bash&#34;&gt;# ~/dotsfiles/.editorconfigファイルのシンボリックリンクを
# ホームディレクトリに作成する
$ ln -s ~/dotsfiles/.editorconfig ~
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;確認&#34;&gt;確認&lt;/h2&gt;

&lt;p&gt;こんな感じで作成される。&lt;br /&gt;
ファイル種類の「l」はシンボリックリンクを表す。&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-@bash&#34;&gt;$ ls -la ~
...
lrwxr-xr-x    1 usr  staff     35  9 12 18:29 .editorconfig -&amp;gt; /Users/usr/dotsfiles/.editorconfig
...
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;削除&#34;&gt;削除&lt;/h2&gt;

&lt;p&gt;作成されたシンボリックリンクを削除する。&lt;br /&gt;
&lt;code&gt;$ unlink シンボリックリンクのパス&lt;/code&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-@bash&#34;&gt;# 削除
$ unlink ~/.editorconfig
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>ApacheにBasic認証を設定する</title>
      <link>http://mzgkworks.com/post/apache-basic-auth/</link>
      <pubDate>Mon, 12 Sep 2016 16:28:46 +0900</pubDate>
      
      <guid>http://mzgkworks.com/post/apache-basic-auth/</guid>
      <description>

&lt;p&gt;CentOS7・Apacheで基本認証（Basic認証）を設定する方法。&lt;br /&gt;
基本認証は、あらかじめApacheにユーザー名とパスワードを登録しておき、特定のディレクトリ以下にアクセスがあれば認証を求めるという仕組み。&lt;/p&gt;

&lt;h2 id=&#34;環境&#34;&gt;環境&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;Apache : Apache/2.4.6 (CentOS)&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;基本認証とダイジェスト認証&#34;&gt;基本認証とダイジェスト認証&lt;/h2&gt;

&lt;p&gt;ユーザー名・パスワードの入力を戻る方法としては、以下の２種類が存在する。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;基本認証 : ユーザー・パスワードのデータを平文で送信&lt;/li&gt;
&lt;li&gt;ダイジェスト認証 : MD5で暗号化して送信&lt;/li&gt;
&lt;li&gt;安全性 : ダイジェスト認証　＞　基本認証&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;基本認証の追加&#34;&gt;基本認証の追加&lt;/h2&gt;

&lt;h3 id=&#34;登録ファイルの作成&#34;&gt;登録ファイルの作成&lt;/h3&gt;

&lt;p&gt;&lt;code&gt;htpasswd -c ファイル名 ユーザー&lt;/code&gt;コマンドで、ユーザーとパスワードを登録するファイルを作成する。&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-@bash&#34;&gt;# 登録するファイルを作成する
$ sudo htpasswd -c /etc/httpd/conf.d/htpasswd webuser
New Password:
...
Adding password for user webuser
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;権限変更&#34;&gt;権限変更&lt;/h3&gt;

&lt;p&gt;作成された登録ファイルの権限をapacheユーザー・グループのみアクセス可能なように変更する。&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-@bash&#34;&gt;# 所有権
$ sudo chown apache:apache /etc/httpd/conf.d/htpasswd

# アクセス権
$ sudo chmod 600 /etc/httpd/conf.d/htpasswd
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;認証ディレクトリの設定&#34;&gt;認証ディレクトリの設定&lt;/h3&gt;

&lt;p&gt;基本認証を適用するディレクトリの設定を行う。&lt;br /&gt;
設定を記述するファイルのファイル名は任意。&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-@bash&#34;&gt;$ sudo vi /etc/httpd/conf.d/auth.conf

# 以下を追加（適用するディレクトリがドキュメントルートの場合）
&amp;lt;Directory &amp;quot;/var/www/http&amp;quot;&amp;gt;
  AuthType Basic
  AuthName &amp;quot;Private Aera&amp;quot;
  AuthUserFile /etc/httpd/conf.d/htpasswd
  Require valid-user
&amp;lt;/Directory&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;設定内容&lt;/p&gt;

&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th align=&#34;left&#34;&gt;ディレクティブ&lt;/th&gt;
&lt;th align=&#34;left&#34;&gt;説明&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;

&lt;tbody&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;AuthType&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;BASICを指定すると基本認証&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;AuthName&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;認証名（認証ウィンドウの表示）&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;AuthUserFile&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;パスワードファイル名&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;Require&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;認証ユーザー（valid-user : ファイルに書かれた全ユーザー）&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;

&lt;h3 id=&#34;apache設定ファイルの再読み込み&#34;&gt;Apache設定ファイルの再読み込み&lt;/h3&gt;

&lt;p&gt;Apacheをリロードして、設定ファイルを再読み込みさせる。&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-@bash&#34;&gt;$ sudo systemctl reload hhtpd.service
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;urlアクセス時&#34;&gt;URLアクセス時&lt;/h3&gt;

&lt;p&gt;これで、アクセス時に「ユーザー」「パスワード」を求めるダイアログが表示される。&lt;br /&gt;
認証が成功した場合に、アクセスしたページが表示される。&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>CentOS 7へのWebサーバー（Apache）のインストールと基本設定</title>
      <link>http://mzgkworks.com/post/centos7-apache-install/</link>
      <pubDate>Mon, 12 Sep 2016 15:42:13 +0900</pubDate>
      
      <guid>http://mzgkworks.com/post/centos7-apache-install/</guid>
      <description>

&lt;p&gt;CentOS7への、Webサーバー（Apache）のインストールから設定まで。&lt;/p&gt;

&lt;h2 id=&#34;apacheのインストール&#34;&gt;Apacheのインストール&lt;/h2&gt;

&lt;p&gt;&lt;code&gt;$ yum&lt;/code&gt;コマンドを使用して関連あるパッケージを含めてインストールを行う。&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-@bash&#34;&gt;$ sudo yum install httpd
[sudo] password for centuser:
...
インストール:
  httpd.x86_64 0:2.4.6-40.el7.centos.4
...
完了しました!
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;ドキュメントルート&#34;&gt;ドキュメントルート&lt;/h2&gt;

&lt;p&gt;Webで公開するトップディレクトリ。&lt;br /&gt;
デフォルトでは、「/var/www/html/」。&lt;br /&gt;
「/etc/httpd/conf/httpd.conf」ファイルからでも確認ができる。&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-@bash&#34;&gt;# ドキュメントルートを確認（L119付近）
$ sudo vi /etc/httpd/conf/httpd.conf
...
#
# DocumentRoot: The directory out of which you will serve your
# documents. By default, all requests are taken from this directory, but
# symbolic links and aliases may be used to point to other locations.
#
DocumentRoot &amp;quot;/var/www/html&amp;quot;
...
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;設定ファイル-etc-httpd-conf-httpd-conf&#34;&gt;設定ファイル（/etc/httpd/conf/httpd.conf）&lt;/h2&gt;

&lt;p&gt;Apacheのメイン設定ファイル。&lt;/p&gt;

&lt;p&gt;主なディレクティブ&lt;/p&gt;

&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th align=&#34;left&#34;&gt;ディレクティブ&lt;/th&gt;
&lt;th align=&#34;left&#34;&gt;説明&lt;/th&gt;
&lt;th align=&#34;left&#34;&gt;デフォルト&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;

&lt;tbody&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;ServerRoot&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;設定ファイル等を配置するトップディレクトリ&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;/etc/httpd&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;Listen&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Apacheが待ち受けるポート番号&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;80&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;User&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Apacheの実行ユーザー&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;apache&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;Group&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Apacheの実行グループ&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;apache&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;ServerAdmin&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Apacheの管理者&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;root@localhost&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;ServerName&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Webサーバー名&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;#ServerName www.example.com:80&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;DocumentRoot&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;ドキュメントルート&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;/var/www/html&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;DirectoryIndex&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;インデックスファイル名&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;index.html&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;

&lt;h3 id=&#34;serverroot&#34;&gt;ServerRoot&lt;/h3&gt;

&lt;p&gt;設定ファイル等を配置するトップディレクトリ。&lt;br /&gt;
httpd.confファイル内で相対パスを指定すると、このディレクトリが起点となる。&lt;/p&gt;

&lt;h3 id=&#34;listen&#34;&gt;Listen&lt;/h3&gt;

&lt;p&gt;Apacheが待ち受けるポート番号。&lt;/p&gt;

&lt;h3 id=&#34;user-group&#34;&gt;User/Group&lt;/h3&gt;

&lt;p&gt;Apacheの実行ユーザーとグルー。&lt;br /&gt;
Apacheが扱うコンテンツは、ここで指定されているユーザー・グループが利用できるアクセス権が必要。&lt;/p&gt;

&lt;h3 id=&#34;serveradmin&#34;&gt;ServerAdmin&lt;/h3&gt;

&lt;p&gt;Apacheが稼働しているサーバーの管理者のメールアドレス。&lt;/p&gt;

&lt;h3 id=&#34;servername&#34;&gt;ServerName&lt;/h3&gt;

&lt;p&gt;Webサーバーの名前。&lt;br /&gt;
デフォルトではコメントアウトされているので、解除して設定すること。&lt;br /&gt;
:80のようにポート番号を指定できるが、省略してもよい。&lt;/p&gt;

&lt;h3 id=&#34;documentroot&#34;&gt;DocumentRoot&lt;/h3&gt;

&lt;p&gt;ドキュメントルートを &lt;strong&gt;絶対パス&lt;/strong&gt; で設定する。&lt;br /&gt;
このディレクトリ以下には、User/Groupディレクティブで指定したユーザー・グループがアクセスできる必要がある。&lt;/p&gt;

&lt;h3 id=&#34;directoryindex&#34;&gt;DirectoryIndex&lt;/h3&gt;

&lt;p&gt;URLでファイル名まで指定されなかったときに、表示するファイル名を指定する。&lt;/p&gt;

&lt;h2 id=&#34;httpd-confファイルの構文チェック&#34;&gt;httpd.confファイルの構文チェック&lt;/h2&gt;

&lt;p&gt;&lt;code&gt;$ httpd -t&lt;/code&gt; コマンドで構文チェックをすることができる。&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-@bash&#34;&gt;# /etc/httpd/conf/httpd.confファイルのチェック
$ httpd -t
Syntax OK
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;apacheの起動-自動起動設定&#34;&gt;Apacheの起動・自動起動設定&lt;/h2&gt;

&lt;p&gt;Apacheの起動と、次回からのシステム起動時に自動起動させる設定。&lt;br /&gt;
Apacheを起動すると、複数のhttpdプロセスが生成される。&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-@bash&#34;&gt;# 起動
$ sudo systemctl start httpd.service

# 自動起動設定
$ sudo systemctl enable httpd.service
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;ファイヤウォールの設定&#34;&gt;ファイヤウォールの設定&lt;/h2&gt;

&lt;p&gt;ファイヤウォールの設定を変更し、80番ポート（http）へのアクセスを許可させる。&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-@bash&#34;&gt;# 設定
$ sudo firewall-cmd --permanent --add-service=http

# 更新
$ sudo firewall-cmd --reload
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;ログ&#34;&gt;ログ&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;アクセスログ : /var/log/httpd/access_log&lt;/li&gt;
&lt;li&gt;エラーログ : /var/log/httpd/error_log&lt;/li&gt;
&lt;/ul&gt;

&lt;pre&gt;&lt;code class=&#34;language-@bash&#34;&gt;# アクセスログ
$ sudo less /var/log/httpd/access_log

# エラーログ
$ sudo less /var/log/httpd/error_log
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>Linux（CentOS7）のサービス操作（systemctlコマンド）</title>
      <link>http://mzgkworks.com/post/linux-service-systemctl/</link>
      <pubDate>Fri, 09 Sep 2016 17:35:24 +0900</pubDate>
      
      <guid>http://mzgkworks.com/post/linux-service-systemctl/</guid>
      <description>

&lt;h2 id=&#34;サービスの管理&#34;&gt;サービスの管理&lt;/h2&gt;

&lt;p&gt;サービス : OSから切り離し可能な、何らかの役割を持ったサブシステム。&lt;br /&gt;
&lt;code&gt;$ systemctl サブコマンド サービス名&lt;/code&gt; で操作を行う。&lt;br /&gt;
CentOS 6までだと &lt;code&gt;$ service&lt;/code&gt; コマンド。&lt;/p&gt;

&lt;h3 id=&#34;主なサブコマンド&#34;&gt;主なサブコマンド&lt;/h3&gt;

&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th align=&#34;left&#34;&gt;サブコマンド&lt;/th&gt;
&lt;th align=&#34;left&#34;&gt;説明&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;

&lt;tbody&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;start&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;サービスを開始する&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;stop&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;サービスを停止する&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;restart&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;サービスを再起動する&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;enable&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;システム起動時にサービスを自動開始する&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;disable&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;システム起動時にサービスが自動開始しないようにする&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;status&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;サービスの状態を表示する&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;

&lt;h3 id=&#34;主なサービス&#34;&gt;主なサービス&lt;/h3&gt;

&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th align=&#34;left&#34;&gt;サービス名&lt;/th&gt;
&lt;th align=&#34;left&#34;&gt;説明&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;

&lt;tbody&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;firewalld.service&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;ファイヤーウォールサービス&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;crond.service&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;スケジュール処理サービス&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;cups.service&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;印刷サービス&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;postfix.service&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Postfix（メール）サービス&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;rsyslog.service&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;システムログサービス&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;sshd.service&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;SSHサーバー&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;httpd.service&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Webサーバー&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;

&lt;pre&gt;&lt;code class=&#34;language-@bash&#34;&gt;# postfixサービスの状態を確認
$ systemctl status postfix.service
● postfix.service - Postfix Mail Transport Agent
   Loaded: loaded (/usr/lib/systemd/system/postfix.service; enabled; vendor preset: disabled)
   Active: active (running) since 金 2016-09-09 16:17:13 JST; 1h 12min ago
...
...

# postfixサービスを停止
sudo systemctl stop postfix.service
[sudo] password for centuser:

# 確認
systemctl status postfix.service
● postfix.service - Postfix Mail Transport Agent
   Loaded: loaded (/usr/lib/systemd/system/postfix.service; enabled; vendor preset: disabled)
   Active: inactive (dead) since 金 2016-09-09 17:31:09 JST; 17s ago
...

# 開始
# postfixサービスを停止
sudo systemctl start postfix.service
[sudo] password for centuser:

# 確認
systemctl status postfix.service
● postfix.service - Postfix Mail Transport Agent
   Loaded: loaded (/usr/lib/systemd/system/postfix.service; enabled; vendor preset: disabled)
   Active: active (running) since 金 2016-09-09 17:32:26 JST; 33s ago
...
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
  </channel>
</rss>