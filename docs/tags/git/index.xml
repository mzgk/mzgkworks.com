<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Git on mzgkworks.com</title>
    <link>http://mzgkworks.com/tags/git/index.xml</link>
    <description>Recent content in Git on mzgkworks.com</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>ja-JP</language>
    <atom:link href="http://mzgkworks.com/tags/git/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>Git コミットをミスった時の操作</title>
      <link>http://mzgkworks.com/post/git-change-commit/</link>
      <pubDate>Thu, 27 Oct 2016 19:14:50 +0900</pubDate>
      
      <guid>http://mzgkworks.com/post/git-change-commit/</guid>
      <description>

&lt;p&gt;コミットをミスった時の対処方法。&lt;br /&gt;
&lt;strong&gt;コミットのハッシュ値が変わるので、push前のコミットに対して行うこと。&lt;/strong&gt;&lt;br /&gt;
独り開発の場合は、$ git push -f &amp;lt;リモート&amp;gt; &amp;lt;ブランチ&amp;gt; で強制pushもできるが&amp;hellip;&lt;/p&gt;

&lt;h2 id=&#34;環境&#34;&gt;環境&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;Git 2.10.1&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;ハッシュ値&#34;&gt;ハッシュ値&lt;/h2&gt;

&lt;p&gt;ハッシュ値の指定部分は以下でも置き換えが可能。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;現在のコミット : HEAD&lt;/li&gt;
&lt;li&gt;１つ前のコミット : HEAD~, HEAD^&lt;/li&gt;
&lt;li&gt;２つ前のコミット : HEAD~2, HEAD^^&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;メッセージを直したい&#34;&gt;メッセージを直したい&lt;/h2&gt;

&lt;h3 id=&#34;直前のコミットの場合&#34;&gt;直前のコミットの場合&lt;/h3&gt;

&lt;ol&gt;
&lt;li&gt;&lt;code&gt;$ git commit --amend&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;コミットメッセージ入力画面で編集・保存・終了&lt;/li&gt;
&lt;/ol&gt;

&lt;h3 id=&#34;いくつか前のコミットの場合&#34;&gt;いくつか前のコミットの場合&lt;/h3&gt;

&lt;ol&gt;
&lt;li&gt;&lt;code&gt;$ git log --oneline&lt;/code&gt; : 対象コミットの特定&lt;/li&gt;
&lt;li&gt;&lt;code&gt;$ git rebase -i &amp;lt;対象コミットの**１つ前**のハッシュ値&amp;gt;&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;変更するコミットのコマンドを「pick → r」に編集・保存・終了&lt;/li&gt;
&lt;li&gt;コミットメッセージの編集・保存・終了&lt;/li&gt;
&lt;li&gt;&lt;code&gt;$ git rebase --continue&lt;/code&gt; : 対象が複数ある場合&lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&#34;コミットに漏れの追加や内容修正をしたい&#34;&gt;コミットに漏れの追加や内容修正をしたい&lt;/h2&gt;

&lt;h3 id=&#34;直前のコミットの場合-1&#34;&gt;直前のコミットの場合&lt;/h3&gt;

&lt;ol&gt;
&lt;li&gt;&lt;code&gt;$ git add A.txt&lt;/code&gt; : 変更や漏れをステージング&lt;/li&gt;
&lt;li&gt;&lt;code&gt;$ git commit --amend --no-edit&lt;/code&gt; : メッセージ変更しない場合&lt;/li&gt;
&lt;li&gt;&lt;code&gt;$ git commit --amend&lt;/code&gt; : メッセージも変更する場合&lt;/li&gt;
&lt;/ol&gt;

&lt;h3 id=&#34;いくつか前のコミットの場合-1&#34;&gt;いくつか前のコミットの場合&lt;/h3&gt;

&lt;ol&gt;
&lt;li&gt;&lt;code&gt;$ git log --oneline&lt;/code&gt; : 対象コミットの特定&lt;/li&gt;
&lt;li&gt;&lt;code&gt;$ git rebase -i &amp;lt;対象コミットの**１つ前**のハッシュ値&amp;gt;&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;変更するコミットのコマンドを「pick → e」に編集・保存・終了&lt;/li&gt;
&lt;li&gt;&lt;code&gt;$ git add A.txt&lt;/code&gt; : 変更や漏れをステージング&lt;/li&gt;
&lt;li&gt;&lt;code&gt;$ git commit --amend (--no-edit)&lt;/code&gt; : コミット&lt;/li&gt;
&lt;li&gt;&lt;code&gt;$ git rebase --continue&lt;/code&gt; : 対象が複数ある場合&lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&#34;今のコミットを取り消したい&#34;&gt;今のコミットを取り消したい&lt;/h2&gt;

&lt;h3 id=&#34;soft-リポジトリだけ変更&#34;&gt;&amp;ndash;soft : リポジトリだけ変更&lt;/h3&gt;

&lt;p&gt;コミットは取り消したいけど、インデックス・ワーキングエリアはそのままにしたい。&lt;br /&gt;
1. &lt;code&gt;$ git reset --soft HEAD~&lt;/code&gt; : HEADの１つ前の状態に巻き戻す&lt;/p&gt;

&lt;h3 id=&#34;mixed-リポジトリ-インデックスを変更&#34;&gt;&amp;ndash;mixed : リポジトリ・インデックスを変更&lt;/h3&gt;

&lt;p&gt;コミットは取り消したいけど、ワーキングエリアだけはそのままにしたい。&lt;br /&gt;
1. &lt;code&gt;$ git reset --mixed HEAD~&lt;/code&gt; : HEADの１つ前の状態に巻き戻す&lt;/p&gt;

&lt;h3 id=&#34;hard-まったくなかったことにしたい&#34;&gt;&amp;ndash;hard : まったくなかったことにしたい&lt;/h3&gt;

&lt;p&gt;コミットも取り消して、ワーキングエリアの状態も戻したい。&lt;br /&gt;
1. &lt;code&gt;$ git reset --hard 40eeb32&lt;/code&gt; : HEADの１つ前のハッシュ値でも可&lt;/p&gt;

&lt;h2 id=&#34;直近のいくつかのコミットを取り消したい-途中のいくつかだけはrebaseで&#34;&gt;直近のいくつかのコミットを取り消したい（途中のいくつかだけはrebaseで）&lt;/h2&gt;

&lt;h3 id=&#34;soft-リポジトリだけ変更-1&#34;&gt;&amp;ndash;soft : リポジトリだけ変更&lt;/h3&gt;

&lt;p&gt;コミットは取り消したいけど、インデックス・ワーキングエリアはそのままにしたい。&lt;br /&gt;
1. &lt;code&gt;$ git reset --soft HEAD~3&lt;/code&gt; : HEADの3つ前の状態に巻き戻す&lt;/p&gt;

&lt;h3 id=&#34;mixed-リポジトリ-インデックスを変更-1&#34;&gt;&amp;ndash;mixed : リポジトリ・インデックスを変更&lt;/h3&gt;

&lt;p&gt;コミットは取り消したいけど、ワーキングエリアだけはそのままにしたい。&lt;br /&gt;
1. &lt;code&gt;$ git reset --mixed HEAD~3&lt;/code&gt; : HEADの3つ前の状態に巻き戻す&lt;/p&gt;

&lt;h3 id=&#34;hard-全エリアを変更&#34;&gt;&amp;ndash;hard : 全エリアを変更&lt;/h3&gt;

&lt;p&gt;コミットも取り消して、ワーキングエリアの状態も戻したい。&lt;br /&gt;
1. &lt;code&gt;$ git reset --hard 40eeb32&lt;/code&gt; : その状態にしたいコミットのハッシュ値でも可&lt;/p&gt;

&lt;h2 id=&#34;あのコミットをなくしたい&#34;&gt;あのコミットをなくしたい&lt;/h2&gt;

&lt;p&gt;途中のあのコミットだけを削除したい場合。&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;code&gt;$ git log --oneline&lt;/code&gt; : 対象コミットの特定&lt;/li&gt;
&lt;li&gt;&lt;code&gt;$ git rebase -i &amp;lt;対象コミットの**１つ前**のハッシュ値&amp;gt;&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;対象のコミットの行のコマンドを「pick → d」に変更して、保存・終了&lt;/li&gt;
&lt;/ol&gt;

&lt;pre&gt;&lt;code&gt;$ git log --decorate --oneline
1588243 (HEAD -&amp;gt; master) 3 bye
2620a4a 2 morning ← このコミットを削除したい
40eeb32 1st hello

// rebase
$ git rebase -i HEAD~2（or 40eeb32）
... エディタが起動
pick 2620a4a 2 morning
pick 1588243 3 bye

... 対象コミットのpickをdに編集して、保存・終了
d 2620a4a 2 morning ← 削除 : d
pick 1588243 3 bye

// コンフリクトが発生した場合は、解消して
$ git add .
$ git rebase --continue
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;コミットをまとめたい&#34;&gt;コミットをまとめたい&lt;/h2&gt;

&lt;p&gt;いくつかのコミットをまとめて、１つのコミットにしたい場合。&lt;br /&gt;
&lt;strong&gt;１つ前&lt;/strong&gt; のコミットと統合される。&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;code&gt;$ git log --oneline&lt;/code&gt; : 対象コミットの特定&lt;/li&gt;
&lt;li&gt;&lt;code&gt;$ git rebase -i &amp;lt;対象コミットの**１つ前**のハッシュ値&amp;gt;&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;（メッセージ変更あり）まとめたいコミット行のコマンドを「s」に変更して、保存・終了&lt;/li&gt;
&lt;li&gt;（メッセージ変更なし）まとめたいコミット行のコマンドを「f」に変更して、保存・終了&lt;/li&gt;
&lt;/ol&gt;

&lt;pre&gt;&lt;code class=&#34;language-@git&#34;&gt;$ git log --oneline
a990297 4 commit
72698fd 3 commit ← これと
38517d7 2 commit ← これを統合したい
1736724 1 commit

// rebase開始
$ git rebase -i HEAD~3
pick 38517d7 2 commit
pick 72698fd 3 commit　← これを２に統合（１つ前に統合されるので）
pick a990297 4 commit

// 編集して、保存・終了
pick 38517d7 2 commit
s 72698fd 3 commit → s:メッセージ編集あり／f:なし（１つ前のメッセージが適用）
pick a990297 4 commit

// メッセージ編集が表示される
# This is a combination of 2 commits.
# This is the 1st commit message:

2 commit

# This is the commit message #2:

3 commit

// 編集して、保存・終了
2-3 commit

// 確認
$ git log --oneline
f91881d 4 commit
a7c420d 2-3 commit
1736724 1 commit
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;コミットの順番を変更したい&#34;&gt;コミットの順番を変更したい&lt;/h2&gt;

&lt;p&gt;コミットの順番を入れ替えたい場合。&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;code&gt;$ git log --oneline&lt;/code&gt; : 対象コミットの特定&lt;/li&gt;
&lt;li&gt;&lt;code&gt;$ git rebase -i &amp;lt;対象コミットの**１つ前**のハッシュ値&amp;gt;&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;コミットの行を入れ替えて、保存・終了&lt;/li&gt;
&lt;/ol&gt;

&lt;pre&gt;&lt;code class=&#34;language-@git&#34;&gt;$ git log --oneline
f02a616 4 commit
9b399bc 3 commit file add ← これと
12f55d3 2 commit          ← これの順番を入れ替えたい
8a337e8 1 commit

// rebase開始
$ git rebase -i HEAD~3
pick 12f55d3 2 commit
pick 9b399bc 3 commit file add ← この行を2 commitの上に移動する
pick f02a616 4 commit

// 編集し、保存・終了
pick 9b399bc 3 commit file add
pick 12f55d3 2 commit
pick f02a616 4 commit

// 結果
$ git log --oneline
d7f14ec 4 commit
00d216a 2 commit
a22ab93 3 commit file add
8a337e8 1 commit
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
  </channel>
</rss>